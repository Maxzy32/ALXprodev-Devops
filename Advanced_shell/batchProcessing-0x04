#!/bin/bash

# Create directory if not exists
mkdir -p pokemon_data

# Pokémon list
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch Pokémon data
fetch_pokemon() {
    local pokemon=$1
    echo "Fetching data for $pokemon..."

    status_code=$(curl -s -o "pokemon_data/${pokemon}.json" -w "%{http_code}" "https://pokeapi.co/api/v2/pokemon/$pokemon")

    if [ "$status_code" -eq 200 ]; then
        echo "Saved data to pokemon_data/${pokemon}.json ✅"
    else
        echo "❌ Failed to fetch data for $pokemon (Status: $status_code)" >&2
        rm -f "pokemon_data/${pokemon}.json"
    fi
}

# Store PIDs
pids=()

# Launch fetches in parallel
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!) # Save PID of background process
done

# Wait for all processes, with cleanup
for pid in "${pids[@]}"; do
    if ! wait "$pid"; then
        echo "⚠️ Process $pid did not finish successfully. Killing..."
        kill "$pid" 2>/dev/null
    fi
done

echo "✅ All parallel fetches completed."
